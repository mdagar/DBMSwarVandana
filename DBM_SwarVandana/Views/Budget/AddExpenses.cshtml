@model ViewModel.ExpensesViewModel
@using Code;
@{
    ViewBag.Title = "AddExpenses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/js/jquery-ui.js"></script>
<script>
    function RedirectToHome() {
        window.location.href = ('@Url.Action("ExpenseList", "Budget")');
    }

    $(function () {
        $("#DateOfExpense").datepicker({ dateFormat: "dd M yy", minDate: "-1w" });
    });

</script>
<!-- start container -->
<div class="container">
    <!-- registration-form -->
    <div class="registration-form">
        @using (Html.BeginForm("AddExpenses", "Budget", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x => x.ExpenseID)
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    <div class="successvalidation">
                        @ViewBag.Success
                    </div>
                }
                else
                {
                    <div>@Html.ValidationSummary(false)</div>
                }
            </div>
            <h3>Add Budget</h3>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span>Expense Amount:</label>
                @Html.TextBoxFor(x => x.ExpenseAmount, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span>Expense For:</label>
                @if (@Model.ExpenseID == 0)
                {
                    @Html.DropDownListFor(x => x.ExpenseFor, new ListBound(Model.ExpenseFor, "ExpenseFor").ExpenseFor, "-- Select --", new { @class = "select" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.ExpenseFor, new ListBound(Model.ExpenseFor, "ExpenseFor").ExpenseFor, "-- Select --", new { @class = "select", @disabled = "disabled" })
                    @Html.HiddenFor(x => x.ExpenseFor)
                }
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span>Description:</label>
                @Html.TextAreaFor(x => x.Description, new { @class = "textarea" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span>Date Of Expense:</label>
                @*@Html.TextBoxFor(x => x.DateOfExpense, new { @class = "input" })*@
                @Html.TextBox("DateOfExpense", Model.DateOfExpense == null ? "" : Model.DateOfExpense.Value.ToString("dd MMM yyyy"), new { @class = "input", @readonly = "readonly" })
            </div>
            @*<div class="row">
                <label for="Password">Is Active :</label>
                @Html.CheckBoxFor(x => x.IsActive, new { @class = "input" })
            </div>*@
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn gap" />
                <input name="button" type="button" value="Cancel" class="submit-btn" onclick="javascript: RedirectToHome();" />
            </div>
        }
    </div>
    <!-- registration-form -->
</div>
<!-- end container -->
