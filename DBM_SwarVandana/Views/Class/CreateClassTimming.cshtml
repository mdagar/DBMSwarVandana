@model ViewModel.ClassTimingPatternsViewModel
@using Code;
@{
    ViewBag.Title = "Class Timming";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = null;
}


<div class="container">
    <!-- table-info -->
    <div class="table-info">
        @using (Html.BeginForm("CreateClassTimming", "Class"))
        {
            @Html.Hidden("ClassId", Model.classDetais.ClassId)
            <div>
                <table>
                    <tr>
                        <td>Id</td>
                        <td>@Model.classDetais.ClassId</td>
                    </tr>
                    <tr>
                        <td>Did</td>
                        <td>@Model.classDetais.DisciplineId</td>
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>Day</td>
                        <td>Start Time</td>
                        <td>End Time</td>
                        <td>Action</td>
                    </tr>
                    @if (Model.li.Count == 0)
                    {
                        foreach (var v in typeof(WeekDays).SelectList<WeekDays>(true))
                        {
                            <tr>
                                <td>@v.Text</td>
                                <td><input type="text" id="startTime" /></td>
                                <td><input type="text" id="endTime" /></td>
                                <td>
                                    <input type="checkbox" value="@v.Value" onclick="AddRow(this)" />
                                </td>
                            </tr>
                        }
                    }
                </table>
                <div id="Tcollection">
                    @Html.Action("TimeCollection", "Class", new { flag = 3, PatternId = 0, classId = @Model.classDetais.ClassId })
                </div>
            </div>
            <input type="submit" value="Save" />
        }
    </div>
</div>

<script src="~/Content/JS/jquery-1.11.1.js"></script>

<script type="text/javascript">
    function AddRow(o) {
        var weekdayId = $(o).val();
        var starttime = $(o).closest("tr").find("#startTime").val();
        var endtime = $(o).closest("tr").find("#endTime").val();

        var flag = 4;

        if ($(o).prop("checked") == true)
            flag = 1;
        else {
            flag = 2;
            $(o).closest("tr").find("#startTime").val('');
            $(o).closest("tr").find("#endTime").val('');
        }

        if (starttime == '' || endtime == '' || weekdayId == '') {
            $(o).prop("checked", false);
            return false;
        }
        var isValidDate = DateCompare(endtime, starttime);
        if (isValidDate != 1) {
            alert('Invalid Time');
            $(o).prop("checked", false);
            return false;
        }

        $.get('@Url.Action("TimeCollection","Class")?flag=' + flag + "&classId=" + '@Model.classDetais.ClassId' + "&randNo=" + Math.random() + "&WeekDayId=" + weekdayId + "&starttime=" + starttime + "&endtime=" + endtime, function (data) {
            $("#Tcollection").html(data);
        })
    }

    function GetTimePattren() {
        var starttime = "";
        var endtime = "";
        var weekDayId = $("#WeekDayId").val();

        if (weekDayId == '') {
            return false;
        }
        $.get('@Url.Action("TimeCollection","Class")?flag=' + 3 + "&PatternId=" + 0 + "&classId=" + '@Model.classDetais.ClassId' + "&startTime=" + starttime + "&endTime=" + endtime + "&randNo=" + Math.random() + "&WeekDayId=" + weekDayId, function (data) {
            $("#Tcollection").html(data);
        })

    }

    function Remove(o) {
        $.get('@Url.Action("TimeCollection","Class")?flag=' + 2 + "&PatternId=" + o, function (data) {
            $("#Tcollection").html(data);
        })
    }

    function DateCompare(time1, time2) {
        var t1 = new Date();
        var parts = time1.split(":");
        if (parts.length <= 1)
            t1.setHours(parts[0], 0, 0, 0);
        else
            t1.setHours(parts[0], parts[1], 0, 0);
        var t2 = new Date();
        parts = time2.split(":");
        if (parts.length <= 1)
            t2.setHours(parts[0], 0, 0, 0);
        else
            t2.setHours(parts[0], parts[1], 0, 0);

        // returns 1 if greater, -1 if less and 0 if the same
        if (t1.getTime() > t2.getTime()) return 1;
        if (t1.getTime() < t2.getTime()) return -1;
        return 0;
    }
</script>
