@model ViewModel.EnquiryViewModel
@using Code;
@{
    ViewBag.Title = "PhysicalEnquiry";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = null;


    IEnumerable<Status> statusid = Enum.GetValues(typeof(Status))
                                                      .Cast<Status>();
    IEnumerable<SelectListItem> status = from u in statusid
                                         select new SelectListItem
                                         {
                                             Text = u.ToString(),
                                             Value = ((int)u).ToString()
                                         };

    IEnumerable<EnquiryFor> studentfor = Enum.GetValues(typeof(EnquiryFor))
                 .Cast<EnquiryFor>();
    IEnumerable<SelectListItem> probablefor = from u in studentfor
                                              select new SelectListItem
                                              {
                                                  Text = u.ToString(),
                                                  Value = ((int)u).ToString()
                                              };

    IEnumerable<Gender> gender = Enum.GetValues(typeof(Gender))
.Cast<Gender>();
    IEnumerable<SelectListItem> gendermf = from u in gender
                                           select new SelectListItem
                                           {
                                               Text = u.ToString(),
                                               Value = ((int)u).ToString()
                                           };
}
<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/js/jquery-ui.js"></script>
<script>
    function GetCitiesByStateId() {
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
        });
    }

    $(function () {
        $("#DateOfEnquiry").datepicker({ dateFormat: "dd M yy", minDate: "-1w" });
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
            $("#CityId").find("option").each(function () {
                if ($(this).val() == "@Model.CityId") {
                    $(this).attr("selected", "selected");
                }
            });
        });


    });

    function RedirectToHome() {
        window.location.href = ('@Url.Action("PhysicalEnquiryList", "Enquiries")');
    }
</script>
<!-- start container -->
<div class="container">

    <!-- registration-form -->
    <div class="registration-form">
        @using (Html.BeginForm("PhysicalEnquiry", "Enquiries", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    @ViewBag.Success
                }
                else
                {
                    @ViewBag.Error
                }
                <div>@Html.ValidationSummary(false)</div>
            </div>
            <h3>Physical Enquiry</h3>
            <div class="row">
                <label for="Password">Source :</label>
                @Html.DropDownListFor(x => x.SourceId, new ListBound(Model.SourceId, "Sources").Sources, "-- Select Source --", new { @class = "select" })
                @Html.HiddenFor(x => x.EnquiryId);
            </div>
            <div class="row">
                <label for="Password">Contact Number :</label>
                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Name :</label>
                @Html.TextBoxFor(x => x.Name, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Date of Visit :</label>
                @Html.TextBoxFor(x => x.DateOfEnquiry, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Discipline :</label>
                @Html.DropDownListFor(x => x.Discipline, new ListBound(Model.Discipline, "Disciplines").Disciplines, "-- Select Discipline --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">Probable Student :</label>
                @Html.DropDownListFor(x => x.ProbableStudentFor, probablefor, "-- Select --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">Gender :</label>
                @Html.DropDownListFor(x => x.Gender, gendermf, "-- Select --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">Age :</label>
                @Html.TextBoxFor(x => x.Age, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Occupation :</label>
                @Html.TextBoxFor(x => x.Occupation, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Attended By :</label>
                @Html.DropDownListFor(x => x.AttendedBy, new ListBound(Model.AttendedBy, "Users").Users, "-- Select User --", new { @class = "select" })
            </div>
          
            <div class="row">
                <label for="Password">State :</label>
                @Html.DropDownListFor(x => x.StateId, new ListBound(Model.StateId, "States").States, "-- Select State --", new { onchange = "javascript:GetCitiesByStateId();", @class = "select" })
            </div>
            <div class="row">
                <label for="Password">City :</label>
                @Html.DropDownListFor(x => x.CityId, Enumerable.Empty<SelectListItem>(), new { @class = "select" })
            </div>
              <div class="row">
                <label for="Password">Address :</label>
                @Html.TextAreaFor(x => x.Address, new { @class = "textarea" })
            </div>
            <div class="row">
                <label for="Password">Demo :</label>
                <div class="column">
                    @Html.RadioButtonFor(x => x.Demo, true, new { @class = "radio" })
                    <label for="male">Yes</label>
                    @Html.RadioButtonFor(x => x.Demo, false, new { @class = "radio" })
                    <label for="female">No</label>
                </div>
            </div>
            <div class="row">
                <label for="Password">Remarks By Faculty :</label>
                @Html.TextAreaFor(x => x.RemarksByFaculty, new { @class = "textarea" })
            </div>
            <div class="row">
                <label for="Password">No of Classes :</label>
                @Html.TextBoxFor(x => x.NoOfClasses, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Packages :</label>
                @Html.TextBoxFor(x => x.Package, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Registration :</label>
                @Html.TextBoxFor(x => x.RegistrationAmount, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Status :</label>
                @Html.DropDownListFor(x => x.StatusId, status, "-- Select Status --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">Remarks :</label>
                @Html.TextAreaFor(x => x.FinalComments, new { @class = "textarea" })
            </div>
             <div class="row">
                 	<label for="IsActive">Is Active</label>
                    <div class="column">
                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "checkbox" })
                    </div>
                </div>
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn gap" />
                <input name="button" type="button" value="Cancel" class="submit-btn" onclick="javascript: RedirectToHome();" />
            </div>
    
        }
    </div>

</div>
