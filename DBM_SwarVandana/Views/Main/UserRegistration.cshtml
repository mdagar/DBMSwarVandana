@model ViewModel.UsersViewModel
@using Code;
@{
    ViewBag.Title = "User Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IEnumerable<UserRole> userrole = Enum.GetValues(typeof(UserRole))
                                                       .Cast<UserRole>();
    IEnumerable<SelectListItem> roles = from u in userrole
                                        select new SelectListItem
                                        {
                                            Text = u.ToString(),
                                            Value = ((int)u).ToString()
                                        };
}
<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/js/jquery-ui.js"></script>
<script>

    function GetCitiesByStateId() {
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
        });
    }

    $(function () {
        $("#DOB,#DOJ").datepicker({ dateFormat: "dd M yy", minDate: "-1m" });
    });
</script>

<!-- start container -->
<div class="container">

    <!-- registration-form -->
    <div class="registration-form">

        <h3>Add User</h3>
        @using (Html.BeginForm("UserRegistration", "Main", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    @ViewBag.Success
                }
                else
                {
                    @ViewBag.Error
                }
                <div>@Html.ValidationSummary(false)</div>
            </div>
            
            <div class="row">
                <label for="Password">First Name :</label>
                @Html.TextBoxFor(x => x.FirstName, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Last Name :</label>
                @Html.TextBoxFor(x => x.LastName, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">DOB :</label>
                @Html.TextBoxFor(x => x.DOB, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">DOJ :</label>
                @Html.TextBoxFor(x => x.DOJ, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Contact Number :</label>
                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "input" }))
            </div>
            <div class="row">
                <label for="Password">Email ID :</label>
                @Html.TextBoxFor(x => x.EmailID, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Centre ID :</label>
                @Html.DropDownListFor(x => x.CentreId, new ListBound(Model.CentreId, "Centres").Centres, "-- Select Centre --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">Salary :</label>
                @Html.TextBoxFor(x => x.Salary, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Role ID :</label>
                @Html.DropDownListFor(x => x.RoleId, roles, "-- Select Centre --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password">User Name :</label>
                @Html.TextBoxFor(x => x.UserName, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Password :</label>
                @Html.PasswordFor(x => x.Password, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Address :</label>
                @Html.TextAreaFor(x => x.Address, new { @class = "textarea" })
            </div>
            <div class="row">
                <label for="Password">State :</label>
                @Html.DropDownListFor(x => x.StateId, new ListBound(Model.StateId, "States").States, "-- Select State --", new { onchange = "javascript:GetCitiesByStateId();", @class = "select" }))
            </div>
            <div class="row">
                <label for="Password">City :</label>
                @Html.DropDownListFor(x => x.CityId, Enumerable.Empty<SelectListItem>(), new { @class = "select" })
            </div>
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn" />
            </div>
    
        }

    </div>
</div>
