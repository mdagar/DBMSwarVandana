@model ViewModel.FacultyViewModel
@using Code;
@{
    ViewBag.Title = "FacultyRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";

    IEnumerable<Gender> gender = Enum.GetValues(typeof(Gender))
.Cast<Gender>();
    IEnumerable<SelectListItem> gendermf = from u in gender
                                           select new SelectListItem
                                           {
                                               Text = u.ToString(),
                                               Value = ((int)u).ToString()
                                           };
}
<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/js/jquery-ui.js"></script>
<script>

    function GetCitiesByStateId() {
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
        });
    }

    $(function () {
        $("#DOJ").datepicker({ dateFormat: "dd M yy", minDate: "-1m", maxDate: "-1d" });
        $("#DOB").datepicker({ dateFormat: "dd M yy", maxDate: "-15y" });
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
            $("#CityId").find("option").each(function () {
                if ($(this).val() == "@Model.CityId") {
                    $(this).attr("selected", "selected");
                }
            });
        });
    });

    function RedirectToHome() {
        window.location.href = ('@Url.Action("GetFaculityList", "Faculty")');
    }

</script>

<!-- start container -->
<div class="container">

    <!-- registration-form -->
    <div class="registration-form">
        @using (Html.BeginForm("FacultyRegistration", "Faculty", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    <div class="successvalidation">
                        @ViewBag.Success
                    </div>
                }
                else
                {
                    <div>@Html.ValidationSummary(false)</div>
                }

            </div>
            <h3>Faculty</h3>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Name of Faculty :</label>
                @Html.TextBoxFor(x => x.NameOfFaculty, new { @class = "input" })
                @Html.HiddenFor(x => x.FacultyId)
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Email ID :</label>
                @Html.TextBoxFor(x => x.EmailID, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Contact Number :</label>
                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Date of Birth :</label>
                @Html.TextBox("DOB", Model.DOB == null ? "" : Model.DOB.Value.ToString("dd MMM yyyy"), new { @class = "input", @readonly = "readonly" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Date of Joining :</label>
                @Html.TextBox("DOJ", Model.DOJ == null ? "" : Model.DOJ.Value.ToString("dd MMM yyyy"), new { @class = "input", @readonly = "readonly" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Discipline :</label>
                @Html.DropDownListFor(x => x.DisciplineId, new ListBound(Model.DisciplineId, "Disciplines").Disciplines, "-- Select Discipline --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Year of Experience :</label>
                @Html.TextBoxFor(x => x.YearOfExperience, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> State :</label>
                @Html.DropDownListFor(x => x.StateId, new ListBound(Model.StateId, "States").States, "-- Select State --", new { onchange = "javascript:GetCitiesByStateId();", @class = "select" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> City :</label>
                @Html.DropDownListFor(x => x.CityId, Enumerable.Empty<SelectListItem>(), new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Address :</label>
                @Html.TextAreaFor(x => x.Address, new { @class = "textarea" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Gender :</label>
                @Html.DropDownListFor(x => x.Gender, gendermf, "-- Select Gender --", new { @class = "select" })
            </div>
            <div class="row">
                <label for="Password"><span style="color: red;">*</span> Salary :</label>
                @Html.TextBoxFor(x => x.Salary, new { @class = "input" })
            </div>
            <div class="row">
                <label for="Password">Salary Revision :</label>
                @Html.TextBoxFor(x => x.SalaryRevision, new { @class = "input" })
            </div>
            <div class="row">
                <label for="IsActive">Is Active</label>
                <div class="column">
                    @Html.CheckBoxFor(x => x.IsActive, new { @class = "checkbox" })
                </div>
            </div>
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn gap" />
                <input name="button" type="button" value="Cancel" class="submit-btn" onclick="javascript: RedirectToHome();" />
            </div>

        }
    </div>
</div>
