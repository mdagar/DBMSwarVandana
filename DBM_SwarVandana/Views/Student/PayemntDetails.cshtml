@model ViewModel.PaymentDetailsViewModel
@using Code;
@{
    ViewBag.Title = "Payemnt Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    IEnumerable<PaymentMode> modeid = Enum.GetValues(typeof(PaymentMode))
                                                      .Cast<PaymentMode>();
    IEnumerable<SelectListItem> pmode = from u in modeid
                                        select new SelectListItem
                                        {
                                            Text = u.ToString(),
                                            Value = ((int)u).ToString()
                                        };
}

<link href="~/Content/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Content/js/jquery-ui.js"></script>
<style>
    .newform {
        margin-left: 1px !important;
        margin-top: 20px !important;
    }

    tr.spaceUnder > td {
        padding-bottom: 1em;
    }
</style>
<script>

    $(document).ready(function () {
        $("#DateOfPayment").datepicker({ dateFormat: "dd M yy", minDate: "-1m" });
        $("#DueDate").datepicker({ dateFormat: "dd M yy", minDate: "-1m", minDate: new Date() });
    });
    function GetStudentDetails() {
        var uniqueid = $("#UniqueKey").val();
        if (uniqueid == '') {
            alert("Please enter enrollment number.");
            return false;
        }
        else {
            $.post('@Url.Action("GetStudentByUniqueId", "Student")', { UniqueId: uniqueid }, function (data) {
                if (data.Name != "") {
                    $("#lblName").val(data.Name);
                    $("#ContactNumber").val(data.Contact1);
                    $("#EmailID").val(data.EmailAddress);
                    $("#Address").val(data.Address);
                    $("#GuardianName").val(data.GuardianName);
                    $("#StudentId").val(data.StudentId);
                    $.post('@Url.Action("GetClassesForPayments", "Student")', { studentId: data.StudentId }, function (classes) {
                        var result = JSON.parse(classes)
                        $("#ClassId").html('');
                        $("#ClassId").append('<option value="">-- Select Class --</option>');
                        $.each(result, function (i, Class) {
                            $("#ClassId").append('<option info="' + Class.EndDate + '" value="' + Class.ClassID + '" >' +
                                 Class.ClassName + '</option>');
                        });
                    });
                }
                else {
                    alert("No record found");
                }

            });
        }
    }
    function SetDueDatePicker() {

        $("#DueDate").datepicker('option', 'maxDate', $("#ClassEndDate").val());
    }
    function GetClassPaymentDetails(o) {
        var classId = $(o).val();
        var date = ConvertDate($(o).find(':selected').attr('info'));
        $("#ClassEndDate").val(date);
        SetDueDatePicker();
        $("#lblNoofClass").val('');
        $("#lblCourseamt").val('');
        $("#lblpaidmat").val('');
        $("#lblbalamt").val('');
        $.post('@Url.Action("GetClassPaymentDetails", "Student")', { ClassID: classId, studentID: $("#StudentId").val() }, function (data) {
            if (data != null) {
                var result = JSON.parse(data)
                $("#lblNoofClass").val(result[0].NoOfClasses);
                $("#lblCourseamt").val(result[0].CourseAmount);
                $("#lblpaidmat").val(result[0].PaidAmount);
                $("#lblbalamt").val(result[0].BalanceAmount);
            }
        });
    }
    function CheckBalance() {
        var amtpaid = $("#AmountPaid").val();
        var balmat = $("#lblbalamt").val();
        if (parseInt(amtpaid) > parseInt(balmat)) {
            alert('Paid Amount is not greater then Balance Amount');
            $("#AmountPaid").val('');
        }
        else {
            var bal = balmat - amtpaid;
            $("#txtBalance").val(bal);
        }
    }
    function ConvertDate(dat) {
        var parsedDate = new Date(parseInt(dat.substr(6)));
        var d = new Date(parsedDate); //Date object
        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        var finalDate = +d.getDate() + " " + months[(d.getMonth() + 1) - 1] + " " + d.getFullYear();
        return finalDate;
    }
    function RedirectToHome() {
        window.location.href = ('@Url.Action("Index", "Main")');
    }

</script>
<div class="container">

    <!-- registration-form -->
    <div class="registration-form">
        @using (Html.BeginForm("PayemntDetails", "Student", FormMethod.Post, new { @class = "newform" }))
        {

            @Html.Hidden("StudentId")
            @Html.Hidden("ClassEndDate")
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    <div class="successvalidation">
                        @ViewBag.Success
                    </div>
                }
                else
                {
                    if (!string.IsNullOrEmpty(ViewBag.Error))
                    {
                        <div class="row" style="text-align:left;font-size:14px;">
                            @ViewBag.Error
                        </div>
                    }
                    else
                    {
                        <div>@Html.ValidationSummary(false)</div>
                    }
                    
                }
            </div>
            <div class="row">
                <label for="Password">Enrollment Number :</label>
                <input id="UniqueKey" type="text" class="input" />
                <a href="#" id="btnGet" onclick="javascript: GetStudentDetails();">Get Details</a>
            </div>
            <div class="row">
                <fieldset>
                    <legend>Student Details</legend>
                    <table id="showstudent">
                        <tr class="spaceUnder">
                            <td>Name</td>
                            <td>
                                <input id="lblName" readonly="readonly" type="text" class="input" />
                            </td>
                            <td>Contact</td>
                            <td>
                                <input id="ContactNumber" readonly="readonly" type="text" class="input" />
                            </td>
                        </tr>
                        <tr class="spaceUnder">
                            <td>Email</td>
                            <td>
                                <input id="EmailID" readonly="readonly" type="text" class="input" />
                            </td>
                            <td>Address</td>
                            <td>
                                <input id="Address" readonly="readonly" type="text" class="input" />
                            </td>
                            <td>Guardian</td>
                            <td>
                                <input id="GuardianName" readonly="readonly" type="text" class="input" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div style="padding:1%;height:1px;">

            </div>
            <div class="row" style="padding-top: 1em;">
                <label for="Password">Class :</label>
                <select name="ClassId" id="ClassId" class="select" onchange="GetClassPaymentDetails(this)"></select>
            </div>
            <div class="row">
                <fieldset>
                    <legend>Class Payment Details</legend>
                    <table id="showstudent">
                        <tr class="spaceUnder">
                            <td>No of Classes</td>
                            <td>
                                <input id="lblNoofClass" readonly="readonly" type="text" class="input" />
                            </td>
                            <td>Course Amount</td>
                            <td>
                                <input id="lblCourseamt" readonly="readonly" type="text" class="input" />
                            </td>
                        </tr>
                        <tr class="spaceUnder">
                            <td>Paid Amount</td>
                            <td>
                                <input id="lblpaidmat" readonly="readonly" type="text" class="input" />
                            </td>
                            <td>Balance Amount</td>
                            <td>
                                <input id="lblbalamt" readonly="readonly" type="text" class="input" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div style="padding:1%;height:1px;">

            </div>
            <div class="row">
                <fieldset>
                    <legend>Payment Details</legend>
                    <table>
                        <tr class="spaceUnder">
                            <td>Bank Name</td>
                            <td>
                                @Html.TextBoxFor(x => x.BankName, new { @class = "input" })
                            </td>
                            <td>Payment Mode</td>
                            <td>
                                @Html.DropDownListFor(x => x.PaymentMode, pmode, "-- Select Mode --", new { @class = "select" })
                            </td>
                            <td>Amount Paid</td>
                            <td>
                                @Html.TextBoxFor(x => x.AmountPaid, new { @class = "input", @onchange = "CheckBalance()" })
                            </td>
                        </tr>
                        <tr class="spaceUnder">
                            <td>Cheque/Credit Card No</td>
                            <td>
                                @Html.TextBoxFor(x => x.TransactionDetails, new { @class = "input" })
                            </td>
                            <td>Pay Date</td>
                            <td>
                                @Html.TextBoxFor(x => x.DateOfPayment, new { @class = "input" })
                            </td>
                            <td>Balance</td>
                            <td>
                                <input id="txtBalance" type="text" readonly="readonly" class="input" />
                            </td>
                        </tr>
                        <tr class="spaceUnder">
                            <td>Next Due Date</td>
                            <td>
                                @Html.TextBoxFor(x => x.DueDate, new { @class = "input" })
                            </td>
                        </tr>
                    </table>
                </fieldset>

            </div>
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn" />
                <input name="button" type="button" value="Cancel" class="submit-btn" onclick="javascript: RedirectToHome();" />
            </div>
        }
    </div>
</div>
