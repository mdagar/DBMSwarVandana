@model ViewModel.StudentsViewModel
@using Code;
@{
    ViewBag.Title = "AddStudent";
    Layout = null;//"~/Views/Shared/_Layout.cshtml";
}
<script src="~/Content/JS/jquery-1.11.1.js"></script>
<script>
    function GetCitiesByStateId() {
        $.post('@Url.Action("GetCitiesByStateId", "Main")', { StateId: $("#StateId").val() }, function (cities) {
            $("#CityId").html('');
            $("#CityId").append('<option value="">-- Select City --</option>');
            $.each(cities, function (i, City) {
                $("#CityId").append('<option value="' + City.CityId + '">' +
                     City.CityName + '</option>');
                // here we are adding option for States

            });
        });
    }

    function RedirectToHome() {
        window.location.href = ('@Url.Action("AllStudents", "Student")');
    }

</script>
<!-- start container -->
<div class="container">

    <!-- registration-form -->
    <div class="registration-form">
        @using (Html.BeginForm("AddStudent", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.Success))
                {
                    @ViewBag.Success
                }
                else
                {
                    @ViewBag.Error
                }
            </div>
            <h3>Add Student</h3>
            <div class="row">
                <label for="Password">Name :</label>
                @Html.TextBoxFor(x => x.Name, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.Name)
                @Html.HiddenFor(x=>x.UniqueKey)
            </div>
            <div class="row">
                <label for="Password">DOB :</label>
                @Html.TextBoxFor(x => x.DOB, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.DOB)
            </div>
            <div class="row">
                <label for="Password">Contact Number 1 :</label>
                @Html.TextBoxFor(x => x.Contact1, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.Contact1)
            </div>
            
            <div class="row">
                <label for="Password">Contact Number 2 :</label>
                @Html.TextBoxFor(x => x.Contact2, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.Contact2)
            </div>
            <div class="row">
                <label for="Password">Email ID :</label>
                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.EmailAddress)
            </div>
@*<tr>
            <td>Centre ID :</td>
            <td>
                @Html.DropDownListFor(x => x.CentreId, new ListBound(Model.CentreId, "Centres").Centres, "-- Select Centre --")
                @Html.ValidationMessageFor(x => x.CentreId)
            </td>
        </tr>*@
            <div class="row">
                <label for="Password">Address :</label>
                @Html.TextAreaFor(x => x.Address, new { @class = "textarea" })
                @Html.ValidationMessageFor(x => x.Address)
            </div>
            <div class="row">
                <label for="Password">State :</label>
                @Html.DropDownListFor(x => x.StateId, new ListBound(Model.StateId, "States").States, "-- Select State --", new { onchange = "javascript:GetCitiesByStateId();", @class = "select" })
                @Html.ValidationMessageFor(x => x.StateId)
            </div>
            <div class="row">
                <label for="Password">City :</label>
                @Html.DropDownListFor(x => x.CityId, Enumerable.Empty<SelectListItem>(), new { @class = "select" })
                @Html.ValidationMessageFor(x => x.CityId)
            </div>
            <div class="row">
                <label for="Password">Guardian Name :</label>
                @Html.TextBoxFor(x => x.GuardianName, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.GuardianName)
            </div>
            <div class="row">
                <label for="Password">Occupation :</label>
                @Html.TextBoxFor(x => x.Occupation, new { @class = "input" })
                @Html.ValidationMessageFor(x => x.Occupation)
            </div>
            <div class="row">
                <label for="Password">Has Transport Facility :</label>
                <div class="column">
                    @Html.RadioButtonFor(x => x.HasTransportFacility, true, new { @class = "radio" })
                    <label for="male">Yes</label>
                    @Html.RadioButtonFor(x => x.HasTransportFacility, false, new { @class = "radio" })
                    <label for="female">No</label>
                </div>
            </div>
            <div class="row">
                 	<label for="IsActive">Is Active</label>
                    <div class="column">
                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "checkbox" })
                    </div>
                </div>
            <div class="rowbutton">
                <input type="submit" id="btnSubmit" value="Submit" class="submit-btn gap" />
                <input name="button" type="button" value="Cancel" class="submit-btn" onclick="javascript: RedirectToHome();" />
            </div>
        }
    </div>
</div>

